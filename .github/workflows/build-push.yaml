name: docker-build-push

on:
  workflow_call:
    inputs:
      IMAGE:
        required: true
        type: string
      IMAGE_REGISTRY:
        required: true
        type: string
      WORKDIR:
        required: true
        type: string
    secrets:
      IMAGE_REGISTRY_USER:
        required: true
      IMAGE_REGISTRY_PASSWORD:
        required: true
jobs:
  build:
    name: Docker Build
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
    - name: Inject slug/short variables
      uses: rlespinasse/github-slug-action@v3.x
    - uses: actions/checkout@v2
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.IMAGE_REGISTRY_USER }}
        password: ${{ secrets.IMAGE_REGISTRY_PASSWORD }}
    - name: Build
      working-directory: ${{ inputs.WORKDIR }}
      run: >
        docker buildx build
        --platform=linux/amd64
        -t ${{ inputs.IMAGE_REGISTRY }}/${{ inputs.IMAGE }}:${{ env.GITHUB_SHA_SHORT }}
        --output=type=image,push=true
        ${GITHUB_WORKSPACE}/${{ inputs.WORKDIR }}
  push:
    name: Docker Push
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
    - name: Inject slug/short variables
      uses: rlespinasse/github-slug-action@v3.x
    - uses: actions/checkout@v2
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.IMAGE_REGISTRY_USER }}
        password: ${{ secrets.IMAGE_REGISTRY_PASSWORD }}
    - name: Tag Push Latest
      working-directory: ${{ inputs.WORKDIR }}
      run: >
        docker buildx build
        --platform=linux/amd64
        -t ${{ inputs.IMAGE }}:${{ env.GITHUB_SHA_SHORT }}
        -t ${{ inputs.IMAGE }}:latest
        --output=type=image,push=true
        ${GITHUB_WORKSPACE}/${{ inputs.WORKDIR }}

# name: Test Registration App

# on:
#   push:
#     branches: [develop, main]
#   pull_request:
#     branches: [develop, main]
#   workflow_dispatch:

# jobs:
#     docker-build:
#     runs-on: ubuntu-latest
#     strategy:
#         matrix:
#         include:
#             - image: ghcr.io/bcgov/cas-reg-backend
#             context: bc_obps
#             dockerfile: bc_obps/Dockerfile
#             name: bc_obps
#             - image: ghcr.io/bcgov/cas-reg-frontend
#             context: client
#             dockerfile: client/Dockerfile
#             name: client
#     name: Build ${{ matrix.name }} docker image
#     steps:
#         - uses: actions/checkout@v3
#         - name: Set up Docker Buildx
#         id: buildx
#         uses: docker/setup-buildx-action@v2
#         with:
#             install: true
#         - name: Docker meta
#         id: meta
#         uses: docker/metadata-action@v3
#         with:
#             images: ${{ matrix.image }}
#             tags: |
#             type=sha,format=long,prefix=
#             latest
#             type=ref,event=pr
#         - name: Login to GitHub Container Registry
#         uses: docker/login-action@v2
#         with:
#             registry: ghcr.io
#             username: ${{ github.repository_owner }}
#             password: ${{ secrets.GITHUB_TOKEN }}
#         - name: Cache Docker layers
#         uses: actions/cache@v3
#         with:
#             path: /tmp/.buildx-cache
#             key: ${{ runner.os }}-buildx-${{ matrix.name }}-${{ github.sha }}
#             restore-keys: |
#             ${{ runner.os }}-buildx-${{ matrix.name }}
#         - name: Build image
#         uses: docker/build-push-action@v3
#         with:
#             context: ${{ matrix.context }}
#             builder: ${{ steps.buildx.outputs.name }}
#             push: true
#             file: ${{ matrix.dockerfile }}
#             tags: ${{ steps.meta.outputs.tags }}
#             labels: ${{ steps.meta.outputs.labels }}
#             cache-from: type=local,src=/tmp/.buildx-cache
#             cache-to: type=local,dest=/tmp/.buildx-cache-new
#         # Temp fix
#         # https://github.com/docker/build-push-action/issues/252
#         # https://github.com/moby/buildkit/issues/1896
#         - name: Move cache
#         run: |
#             rm -rf /tmp/.buildx-cache
#             mv /tmp/.buildx-cache-new /tmp/.buildx-cache